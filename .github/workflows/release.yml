name: Build and Release dirdoc

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update || true
          sudo apt-get install -y build-essential make curl unzip || true

      - name: Build dirdoc
        run: make all
        shell: bash

      - name: Create Windows executable copy
        run: |
          cp build/dirdoc ./dirdoc
          chmod +x ./dirdoc
          cp dirdoc dirdoc.exe
          # Verify files exist and have proper permissions
          ls -la dirdoc*

      - name: Check if running in Act
        id: check_act
        run: |
          if [ -n "$ACT" ] || [ -n "$GITHUB_ACTIONS_ACT" ]; then
            echo "Running in Act environment"
            echo "is_act=true" >> $GITHUB_OUTPUT
          else
            echo "is_act=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip GitHub Release (Local Testing)
        if: steps.check_act.outputs.is_act == 'true'
        run: |
          echo "Skipping GitHub Release step when running locally with act"
          echo "The binaries have been created successfully:"
          ls -la dirdoc*
          
      - name: Install GitHub CLI
        if: steps.check_act.outputs.is_act != 'true' && github.event_name != 'pull_request'
        run: |
          type -p curl >/dev/null || sudo apt install curl -y
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
          && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
          && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
          && sudo apt update \
          && sudo apt install gh -y

      - name: Create GitHub Release
        id: create_release
        if: steps.check_act.outputs.is_act != 'true' && github.event_name != 'pull_request'
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ github.ref_name }}"
          body: "Automated release of dirdoc binary."
          files: |
            ./dirdoc
            ./dirdoc.exe
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT || secrets.GITHUB_TOKEN }}
